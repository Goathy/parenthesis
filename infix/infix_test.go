package infix_test

import (
	"reflect"
	"testing"

	"github.com/Goathy/parenthesis/infix"
)

func TestPostfix(t *testing.T) {
	tt := []struct {
		desc  string
		input []string
		want  string
	}{
		{
			desc:  "342*15-23^^/+",
			input: []string{"3", "4", "2", "*", "1", "5", "-", "2", "3", "^", "^", "/", "+"},
			want:  "(3 + ((4 * 2) / ((1 - 5) ^ (2 ^ 3))))",
		},
		{
			desc:  "53",
			input: []string{"53"},
			want:  "53",
		},
		{
			desc:  "22+",
			input: []string{"2", "2", "+"},
			want:  "(2 + 2)",
		},
		{
			desc:  "483*+",
			input: []string{"4", "8", "3", "*", "+"},
			want:  "(4 + (8 * 3))",
		},
		{
			desc:  "48+3*",
			input: []string{"4", "8", "+", "3", "*"},
			want:  "((4 + 8) * 3)",
		},
		{
			desc:  "62/12+*",
			input: []string{"6", "2", "/", "1", "2", "+", "*"},
			want:  "((6 / 2) * (1 + 2))",
		},
		{
			desc:  "82/22+*",
			input: []string{"8", "2", "/", "2", "2", "+", "*"},
			want:  "((8 / 2) * (2 + 2))",
		},
		{
			desc:  "69+42^+",
			input: []string{"6", "9", "+", "4", "2", "^", "+"},
			want:  "((6 + 9) + (4 ^ 2))",
		},
		{
			desc:  "562^2-*",
			input: []string{"5", "6", "2", "^", "2", "-", "*"},
			want:  "(5 * ((6 ^ 2) - 2))",
		},
		{
			desc:  "482^*11+",
			input: []string{"4", "8", "2", "^", "*", "11", "+"},
			want:  "((4 * (8 ^ 2)) + 11)",
		},
		{
			desc:  "4684*2/+",
			input: []string{"46", "8", "4", "*", "2", "/", "+"},
			want:  "(46 + ((8 * 4) / 2))",
		},
		{
			desc:  "69+42*42^++",
			input: []string{"6", "9", "+", "4", "2", "*", "4", "2", "^", "+", "+"},
			want:  "((6 + 9) + ((4 * 2) + (4 ^ 2)))",
		},
		{
			desc:  "72^25105/+*13-",
			input: []string{"7", "2", "^", "25", "10", "5", "/", "+", "*", "13", "-"},
			want:  "(((7 ^ 2) * (25 + (10 / 5))) - 13)",
		},
		{
			desc:  "10732+*-72^+",
			input: []string{"10", "7", "3", "2", "+", "*", "-", "7", "2", "^", "+"},
			want:  "((10 - (7 * (3 + 2))) + (7 ^ 2))",
		},
		{
			desc:  "5323^5-7-3*+*-",
			input: []string{"5", "3", "2", "3", "^", "5", "-", "7", "-3", "*", "+", "*", "-"},
			want:  "(5 - (3 * (((2 ^ 3) - 5) + (7 * (-3)))))",
		},
		{
			desc:  "21421+*3++*",
			input: []string{"2", "1", "4", "2", "1", "+", "*", "3", "+", "+", "*"},
			want:  "(2 * (1 + ((4 * (2 + 1)) + 3)))",
		},
		{
			desc:  "352^*15/522^--",
			input: []string{"3", "5", "2", "^", "*", "15", "/", "5", "2", "2", "^", "-", "-"},
			want:  "(((3 * (5 ^ 2)) / 15) - (5 - (2 ^ 2)))",
		},
		{
			desc:  "32+2^3+9-32^+",
			input: []string{"3", "2", "+", "2", "^", "3", "+", "9", "-", "3", "2", "^", "+"},
			want:  "(((((3 + 2) ^ 2) + 3) - 9) + (3 ^ 2))",
		},
		{
			desc:  "183/2^137+52^*+",
			input: []string{"18", "3", "/", "2", "^", "13", "7", "+", "5", "2", "^", "*", "+"},
			want:  "(((18 / 3) ^ 2) + ((13 + 7) * (5 ^ 2)))",
		},
		{
			desc:  "78300.5288+*-6/+",
			input: []string{"78", "30", "0.5", "28", "8", "+", "*", "-", "6", "/", "+"},
			want:  "(78 + ((30 - (0.5 * (28 + 8))) / 6))",
		},
		{
			desc:  "5.95.3-7.2*1.42^+",
			input: []string{"5.9", "5.3", "-", "7.2", "*", "1.4", "2", "^", "+"},
			want:  "(((5.9 - 5.3) * 7.2) + (1.4 ^ 2))",
		},
		{
			desc:  "2.12^5.2+7.2-7.1*",
			input: []string{"2.1", "2", "^", "5.2", "+", "7.2", "-", "7.1", "*"},
			want:  "((((2.1 ^ 2) + 5.2) - 7.2) * 7.1)",
		},
		{
			desc:  "220*2/34+32^*+6-15+",
			input: []string{"2", "20", "*", "2", "/", "3", "4", "+", "3", "2", "^", "*", "+", "6", "-", "15", "+"},
			want:  "(((((2 * 20) / 2) + ((3 + 4) * (3 ^ 2))) - 6) + 15)",
		},
	}

	for _, tc := range tt {
		t.Run(tc.desc, func(t *testing.T) {
			got := infix.Transform(tc.input)

			if !reflect.DeepEqual(tc.want, got) {
				t.Errorf("want %q, got %q", tc.want, got)
			}
		})
	}
}
