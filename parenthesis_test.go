package parenthesis_test

import (
	"testing"

	"github.com/Goathy/parenthesis"
)

// Detailed examples https://en.wikipedia.org/wiki/Shunting_yard_algorithm
func TestPostfix(t *testing.T) {
	tt := []struct {
		desc  string
		input []string
		want  string
	}{
		{
			desc:  "3 + 4 * 2 / ( 1 - 5 ) ^ 2 ^ 3",
			input: []string{"3", "+", "4", "*", "2", "/", "(", "1", "-", "5", ")", "^", "2", "^", "3"},
			want:  "342*15-23^^/+",
		},
		{
			desc:  "(53)",
			input: []string{"(", "53", ")"},
			want:  "53",
		},
		{
			desc:  "2+2",
			input: []string{"2", "+", "2"},
			want:  "22+",
		},
		{
			desc:  "4+8*3",
			input: []string{"4", "+", "8", "*", "3"},
			want:  "483*+",
		},
		{
			desc:  "(4+8)*3",
			input: []string{"(", "4", "+", "8", ")", "*", "3"},
			want:  "48+3*",
		},
		{
			desc:  "6/2*(1+2)",
			input: []string{"6", "/", "2", "*", "(", "1", "+", "2", ")"},
			want:  "62/12+*",
		},
		{
			desc:  "8/2*(2+2)",
			input: []string{"8", "/", "2", "*", "(", "2", "+", "2", ")"},
			want:  "82/22+*",
		},
		{
			desc:  "6+9+4^2",
			input: []string{"6", "+", "9", "+", "4", "^", "2"},
			want:  "69+42^+",
		},
		{
			desc:  "5*(6^2-2)",
			input: []string{"5", "*", "(", "6", "^", "2", "-", "2", ")"},
			want:  "562^2-*",
		},
		{
			desc:  "4*8^2+11",
			input: []string{"4", "*", "8", "^", "2", "+", "11"},
			want:  "482^*11+",
		},
		{
			desc:  "46+(8*4)/2",
			input: []string{"46", "+", "(", "8", "*", "4", ")", "/", "2"},
			want:  "4684*2/+",
		},
		{
			desc:  "6+9+(4*2+4^2)",
			input: []string{"6", "+", "9", "+", "(", "4", "*", "2", "+", "4", "^", "2", ")"},
			want:  "69+42*42^++",
		},
		{
			desc:  "7^2*(25+10/5)-13",
			input: []string{"7", "^", "2", "*", "(", "25", "+", "10", "/", "5", ")", "-", "13"},
			want:  "72^25105/+*13-",
		},
		{
			desc:  "10-7*(3+2)+7^2",
			input: []string{"10", "-", "7", "*", "(", "3", "+", "2", ")", "+", "7", "^", "2"},
			want:  "10732+*-72^+",
		},
		{
			desc:  "5-3*(2^3-5+7*(-3))",
			input: []string{"5", "-", "3", "*", "(", "2", "^", "3", "-", "5", "+", "7", "*", "(", "-3", ")", ")"},
			want:  "5323^5-7-3*+*-",
		},
		{
			desc:  "2*(1+(4*(2+1)+3))",
			input: []string{"2", "*", "(", "1", "+", "(", "4", "*", "(", "2", "+", "1", ")", "+", "3", ")", ")"},
			want:  "21421+*3++*",
		},
		{
			desc:  "(3*5^2/15)-(5-2^2)",
			input: []string{"(", "3", "*", "5", "^", "2", "/", "15", ")", "-", "(", "5", "-", "2", "^", "2", ")"},
			want:  "352^*15/522^--",
		},
		{
			desc:  "((3+2)^2+3)-9+3^2",
			input: []string{"(", "(", "3", "+", "2", ")", "^", "2", "+", "3", ")", "-", "9", "+", "3", "^", "2"},
			want:  "32+2^3+9-32^+",
		},
		{
			desc:  "(18/3)^2+((13+7)*5^2)",
			input: []string{"(", "18", "/", "3", ")", "^", "2", "+", "(", "(", "13", "+", "7", ")", "*", "5", "^", "2", ")"},
			want:  "183/2^137+52^*+",
		},
		{
			desc:  "78+(30-0.5*(28+8))/6",
			input: []string{"78", "+", "(", "30", "-", "0.5", "*", "(", "28", "+", "8", ")", ")", "/", "6"},
			want:  "78300.5288+*-6/+",
		},
		{
			desc:  "(5.9-5.3)*7.2+1.4^2",
			input: []string{"(", "5.9", "-", "5.3", ")", "*", "7.2", "+", "1.4", "^", "2"},
			want:  "5.95.3-7.2*1.42^+",
		},
		{
			desc:  "(2.1^2+5.2-7.2)*7.1",
			input: []string{"(", "2.1", "^", "2", "+", "5.2", "-", "7.2", ")", "*", "7.1"},
			want:  "2.12^5.2+7.2-7.1*",
		},
		{
			desc:  "2*20/2+(3+4)*3^2-6+15",
			input: []string{"2", "*", "20", "/", "2", "+", "(", "3", "+", "4", ")", "*", "3", "^", "2", "-", "6", "+", "15"},
			want:  "220*2/34+32^*+6-15+",
		},
	}
	for _, tc := range tt {
		t.Run(tc.desc, func(t *testing.T) {
			got := parenthesis.Postfix(tc.input)

			if tc.want != got {
				t.Errorf("want %q, got %q", tc.want, got)
			}
		})
	}
}
